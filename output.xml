<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0 (Python 3.8.8 on linux)" generated="20210330 01:30:45.487" rpa="false" schemaversion="2">
<suite id="s1" name="Sample Test Copy &amp; Sample Test">
<suite id="s1-s1" name="Sample Test Copy" source="/workspace/python-robot-framework/Tests/sample_test_copy.robot">
<test id="s1-s1-t1" name="Example of connecting to Lambdatest via Robot Framework">
<kw name="Open test browser" library="Common" type="SETUP">
<kw name="Open Browser" library="Selenium2Library">
<arg>https://lambdatest.github.io/sample-todo-app/</arg>
<arg>browser=${BROWSER}</arg>
<arg>remote_url=${REMOTE_URL}</arg>
<arg>desired_capabilities=${CAPABILITIES}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210330 01:30:45.680" level="INFO">Opening browser 'firefox' to base url 'https://lambdatest.github.io/sample-todo-app/' through remote server at 'https://joranbeasley:Pyblv7UaF0DEwvMbFCCd6S0Y9Gsp6Tg3102r5QY46yzakzPlg4@hub.lambdatest.com/wd/hub'.</msg>
<status status="PASS" starttime="20210330 01:30:45.678" endtime="20210330 01:32:07.262"/>
</kw>
<timeout value="50 minutes"/>
<status status="PASS" starttime="20210330 01:30:45.678" endtime="20210330 01:32:07.262"/>
</kw>
<kw name="Page Should Contain Element" library="Selenium2Library">
<arg>name:li1</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20210330 01:32:07.600" level="INFO">Current page contains element 'name:li1'.</msg>
<status status="PASS" starttime="20210330 01:32:07.263" endtime="20210330 01:32:07.601"/>
</kw>
<kw name="Page Should Contain Element" library="Selenium2Library">
<arg>name:li2</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20210330 01:32:07.923" level="INFO">Current page contains element 'name:li2'.</msg>
<status status="PASS" starttime="20210330 01:32:07.601" endtime="20210330 01:32:07.923"/>
</kw>
<kw name="Click Button" library="Selenium2Library">
<arg>name:li1</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20210330 01:32:07.925" level="INFO">Clicking button 'name:li1'.</msg>
<status status="PASS" starttime="20210330 01:32:07.924" endtime="20210330 01:32:09.163"/>
</kw>
<kw name="Click Button" library="Selenium2Library">
<arg>name:li2</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20210330 01:32:09.164" level="INFO">Clicking button 'name:li2'.</msg>
<status status="PASS" starttime="20210330 01:32:09.163" endtime="20210330 01:32:10.342"/>
</kw>
<kw name="Input Text" library="Selenium2Library">
<arg>id:sampletodotext</arg>
<arg>Yey Let's add it to list</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20210330 01:32:10.343" level="INFO">Typing text 'Yey Let's add it to list' into text field 'id:sampletodotext'.</msg>
<status status="PASS" starttime="20210330 01:32:10.342" endtime="20210330 01:32:11.284"/>
</kw>
<kw name="Click Button" library="Selenium2Library">
<arg>id:addbutton</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20210330 01:32:11.285" level="INFO">Clicking button 'id:addbutton'.</msg>
<status status="PASS" starttime="20210330 01:32:11.284" endtime="20210330 01:32:12.440"/>
</kw>
<kw name="Get Text" library="Selenium2Library">
<var>${response}</var>
<arg>xpath=/html/body/div/div/div/ul/li[6]/span</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20210330 01:32:13.031" level="INFO">${response} = Yey Let's add it to list</msg>
<status status="PASS" starttime="20210330 01:32:12.440" endtime="20210330 01:32:13.031"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response}</arg>
<arg>Yey Let's add it to list</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20210330 01:32:13.032" endtime="20210330 01:32:13.032"/>
</kw>
<kw name="Close test browser" library="Common" type="TEARDOWN">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${REMOTE_URL}' != ''</arg>
<arg>Report Lambdatest Status</arg>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Report Lambdatest Status" library="LambdaTestStatus">
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<msg timestamp="20210330 01:32:13.035" level="INFO">Executing JavaScript:
lambda-status=passed
Without any arguments.</msg>
<msg timestamp="20210330 01:32:14.256" level="INFO">Executing JavaScript:
lambda-name=Example of connecting to Lambdatest via Robot Framework
Without any arguments.</msg>
<status status="PASS" starttime="20210330 01:32:13.034" endtime="20210330 01:32:15.462"/>
</kw>
<status status="PASS" starttime="20210330 01:32:13.033" endtime="20210330 01:32:15.462"/>
</kw>
<kw name="Close All Browsers" library="Selenium2Library">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210330 01:32:15.462" endtime="20210330 01:32:15.863"/>
</kw>
<status status="PASS" starttime="20210330 01:32:13.033" endtime="20210330 01:32:15.864"/>
</kw>
<timeout value="50 minutes"/>
<status status="PASS" starttime="20210330 01:30:45.676" endtime="20210330 01:32:15.864"/>
</test>
<test id="s1-s1-t2" name="Example of connecting to Google">
<kw name="Open test browser" library="Common" type="SETUP">
<kw name="Open Browser" library="Selenium2Library">
<arg>https://lambdatest.github.io/sample-todo-app/</arg>
<arg>browser=${BROWSER}</arg>
<arg>remote_url=${REMOTE_URL}</arg>
<arg>desired_capabilities=${CAPABILITIES}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210330 01:32:15.867" level="INFO">Opening browser 'firefox' to base url 'https://lambdatest.github.io/sample-todo-app/' through remote server at 'https://joranbeasley:Pyblv7UaF0DEwvMbFCCd6S0Y9Gsp6Tg3102r5QY46yzakzPlg4@hub.lambdatest.com/wd/hub'.</msg>
<status status="PASS" starttime="20210330 01:32:15.866" endtime="20210330 01:33:37.230"/>
</kw>
<timeout value="50 minutes"/>
<status status="PASS" starttime="20210330 01:32:15.866" endtime="20210330 01:33:37.230"/>
</kw>
<kw name="Go To" library="Selenium2Library">
<arg>https://www.google.com</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20210330 01:33:37.231" level="INFO">Opening url 'https://www.google.com'</msg>
<status status="PASS" starttime="20210330 01:33:37.231" endtime="20210330 01:33:38.273"/>
</kw>
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<arg>css:input</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210330 01:33:38.274" endtime="20210330 01:33:39.210"/>
</kw>
<kw name="Input Text" library="Selenium2Library">
<arg>css:input</arg>
<arg>cat videos</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20210330 01:33:39.211" level="INFO">Typing text 'cat videos' into text field 'css:input'.</msg>
<status status="PASS" starttime="20210330 01:33:39.211" endtime="20210330 01:33:40.236"/>
</kw>
<kw name="Click Element" library="Selenium2Library">
<arg>//input[@value="Google Search"]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210330 01:33:40.237" level="INFO">Clicking element '//input[@value="Google Search"]'.</msg>
<status status="PASS" starttime="20210330 01:33:40.237" endtime="20210330 01:33:41.842"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>10</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210330 01:33:51.843" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20210330 01:33:41.842" endtime="20210330 01:33:51.843"/>
</kw>
<kw name="Close test browser" library="Common" type="TEARDOWN">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${REMOTE_URL}' != ''</arg>
<arg>Report Lambdatest Status</arg>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Report Lambdatest Status" library="LambdaTestStatus">
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<msg timestamp="20210330 01:33:51.846" level="INFO">Executing JavaScript:
lambda-status=passed
Without any arguments.</msg>
<msg timestamp="20210330 01:33:53.057" level="INFO">Executing JavaScript:
lambda-name=Example of connecting to Google
Without any arguments.</msg>
<status status="PASS" starttime="20210330 01:33:51.845" endtime="20210330 01:33:54.285"/>
</kw>
<status status="PASS" starttime="20210330 01:33:51.844" endtime="20210330 01:33:54.285"/>
</kw>
<kw name="Close All Browsers" library="Selenium2Library">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210330 01:33:54.285" endtime="20210330 01:33:54.695"/>
</kw>
<status status="PASS" starttime="20210330 01:33:51.844" endtime="20210330 01:33:54.695"/>
</kw>
<status status="PASS" starttime="20210330 01:32:15.865" endtime="20210330 01:33:54.695"/>
</test>
<status status="PASS" starttime="20210330 01:30:45.511" endtime="20210330 01:33:54.696"/>
</suite>
<suite id="s1-s2" name="Sample Test" source="/workspace/python-robot-framework/Tests/sample_test.robot">
<test id="s1-s2-t1" name="Example of connecting to Lambdatest via Robot Framework">
<kw name="Open test browser" library="Common" type="SETUP">
<kw name="Open Browser" library="Selenium2Library">
<arg>https://lambdatest.github.io/sample-todo-app/</arg>
<arg>browser=${BROWSER}</arg>
<arg>remote_url=${REMOTE_URL}</arg>
<arg>desired_capabilities=${CAPABILITIES}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210330 01:33:54.707" level="INFO">Opening browser 'firefox' to base url 'https://lambdatest.github.io/sample-todo-app/' through remote server at 'https://joranbeasley:Pyblv7UaF0DEwvMbFCCd6S0Y9Gsp6Tg3102r5QY46yzakzPlg4@hub.lambdatest.com/wd/hub'.</msg>
<status status="PASS" starttime="20210330 01:33:54.706" endtime="20210330 01:35:15.414"/>
</kw>
<timeout value="50 minutes"/>
<status status="PASS" starttime="20210330 01:33:54.705" endtime="20210330 01:35:15.414"/>
</kw>
<kw name="Page Should Contain Element" library="Selenium2Library">
<arg>name:li1</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20210330 01:35:15.705" level="INFO">Current page contains element 'name:li1'.</msg>
<status status="PASS" starttime="20210330 01:35:15.419" endtime="20210330 01:35:15.706"/>
</kw>
<kw name="Page Should Contain Element" library="Selenium2Library">
<arg>name:li2</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20210330 01:35:16.013" level="INFO">Current page contains element 'name:li2'.</msg>
<status status="PASS" starttime="20210330 01:35:15.706" endtime="20210330 01:35:16.013"/>
</kw>
<kw name="Click Button" library="Selenium2Library">
<arg>name:li1</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20210330 01:35:16.015" level="INFO">Clicking button 'name:li1'.</msg>
<status status="PASS" starttime="20210330 01:35:16.014" endtime="20210330 01:35:17.167"/>
</kw>
<kw name="Click Button" library="Selenium2Library">
<arg>name:li2</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20210330 01:35:17.170" level="INFO">Clicking button 'name:li2'.</msg>
<status status="PASS" starttime="20210330 01:35:17.169" endtime="20210330 01:35:18.303"/>
</kw>
<kw name="Input Text" library="Selenium2Library">
<arg>id:sampletodotext</arg>
<arg>Yey Let's add it to list</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20210330 01:35:18.305" level="INFO">Typing text 'Yey Let's add it to list' into text field 'id:sampletodotext'.</msg>
<status status="PASS" starttime="20210330 01:35:18.305" endtime="20210330 01:35:19.347"/>
</kw>
<kw name="Click Button" library="Selenium2Library">
<arg>id:addbutton</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20210330 01:35:19.355" level="INFO">Clicking button 'id:addbutton'.</msg>
<status status="PASS" starttime="20210330 01:35:19.354" endtime="20210330 01:35:20.498"/>
</kw>
<kw name="Get Text" library="Selenium2Library">
<var>${response}</var>
<arg>xpath=/html/body/div/div/div/ul/li[6]/span</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20210330 01:35:21.141" level="INFO">${response} = Yey Let's add it to list</msg>
<status status="PASS" starttime="20210330 01:35:20.498" endtime="20210330 01:35:21.141"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${response}</arg>
<arg>Yey Let's add it to list</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20210330 01:35:21.141" endtime="20210330 01:35:21.142"/>
</kw>
<kw name="Close test browser" library="Common" type="TEARDOWN">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${REMOTE_URL}' != ''</arg>
<arg>Report Lambdatest Status</arg>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Report Lambdatest Status" library="LambdaTestStatus">
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<msg timestamp="20210330 01:35:21.145" level="INFO">Executing JavaScript:
lambda-status=passed
Without any arguments.</msg>
<msg timestamp="20210330 01:35:22.363" level="INFO">Executing JavaScript:
lambda-name=Example of connecting to Lambdatest via Robot Framework
Without any arguments.</msg>
<status status="PASS" starttime="20210330 01:35:21.144" endtime="20210330 01:35:23.594"/>
</kw>
<status status="PASS" starttime="20210330 01:35:21.143" endtime="20210330 01:35:23.594"/>
</kw>
<kw name="Close All Browsers" library="Selenium2Library">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210330 01:35:23.594" endtime="20210330 01:35:23.997"/>
</kw>
<status status="PASS" starttime="20210330 01:35:21.142" endtime="20210330 01:35:23.997"/>
</kw>
<timeout value="50 minutes"/>
<status status="PASS" starttime="20210330 01:33:54.704" endtime="20210330 01:35:23.998"/>
</test>
<test id="s1-s2-t2" name="Example of connecting to Google">
<kw name="Open test browser" library="Common" type="SETUP">
<kw name="Open Browser" library="Selenium2Library">
<arg>https://lambdatest.github.io/sample-todo-app/</arg>
<arg>browser=${BROWSER}</arg>
<arg>remote_url=${REMOTE_URL}</arg>
<arg>desired_capabilities=${CAPABILITIES}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20210330 01:35:24.000" level="INFO">Opening browser 'firefox' to base url 'https://lambdatest.github.io/sample-todo-app/' through remote server at 'https://joranbeasley:Pyblv7UaF0DEwvMbFCCd6S0Y9Gsp6Tg3102r5QY46yzakzPlg4@hub.lambdatest.com/wd/hub'.</msg>
<status status="PASS" starttime="20210330 01:35:24.000" endtime="20210330 01:36:45.282"/>
</kw>
<timeout value="50 minutes"/>
<status status="PASS" starttime="20210330 01:35:23.999" endtime="20210330 01:36:45.283"/>
</kw>
<kw name="Go To" library="Selenium2Library">
<arg>https://www.google.com</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<msg timestamp="20210330 01:36:45.283" level="INFO">Opening url 'https://www.google.com'</msg>
<status status="PASS" starttime="20210330 01:36:45.283" endtime="20210330 01:36:46.268"/>
</kw>
<kw name="Wait Until Element Is Visible" library="Selenium2Library">
<arg>css:input</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20210330 01:36:46.268" endtime="20210330 01:36:47.164"/>
</kw>
<kw name="Input Text" library="Selenium2Library">
<arg>css:input</arg>
<arg>cat videos</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20210330 01:36:47.165" level="INFO">Typing text 'cat videos' into text field 'css:input'.</msg>
<status status="PASS" starttime="20210330 01:36:47.165" endtime="20210330 01:36:48.215"/>
</kw>
<kw name="Click Element" library="Selenium2Library">
<arg>//input[@value="Google Search"]</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20210330 01:36:48.216" level="INFO">Clicking element '//input[@value="Google Search"]'.</msg>
<status status="PASS" starttime="20210330 01:36:48.216" endtime="20210330 01:36:49.856"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>10</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20210330 01:36:59.857" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20210330 01:36:49.856" endtime="20210330 01:36:59.857"/>
</kw>
<kw name="Close test browser" library="Common" type="TEARDOWN">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${REMOTE_URL}' != ''</arg>
<arg>Report Lambdatest Status</arg>
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Report Lambdatest Status" library="LambdaTestStatus">
<arg>${TEST_NAME}</arg>
<arg>${TEST_STATUS}</arg>
<msg timestamp="20210330 01:36:59.859" level="INFO">Executing JavaScript:
lambda-status=passed
Without any arguments.</msg>
<msg timestamp="20210330 01:37:00.181" level="INFO">Executing JavaScript:
lambda-name=Example of connecting to Google
Without any arguments.</msg>
<status status="PASS" starttime="20210330 01:36:59.859" endtime="20210330 01:37:01.395"/>
</kw>
<status status="PASS" starttime="20210330 01:36:59.858" endtime="20210330 01:37:01.395"/>
</kw>
<kw name="Close All Browsers" library="Selenium2Library">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20210330 01:37:01.396" endtime="20210330 01:37:01.855"/>
</kw>
<status status="PASS" starttime="20210330 01:36:59.858" endtime="20210330 01:37:01.856"/>
</kw>
<status status="PASS" starttime="20210330 01:35:23.998" endtime="20210330 01:37:01.856"/>
</test>
<status status="PASS" starttime="20210330 01:33:54.698" endtime="20210330 01:37:01.857"/>
</suite>
<status status="PASS" starttime="20210330 01:30:45.488" endtime="20210330 01:37:01.858"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" skip="0" id="s1" name="Sample Test Copy &amp; Sample Test">Sample Test Copy &amp; Sample Test</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Sample Test Copy">Sample Test Copy &amp; Sample Test.Sample Test Copy</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2" name="Sample Test">Sample Test Copy &amp; Sample Test.Sample Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
